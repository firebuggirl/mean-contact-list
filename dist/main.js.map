{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/auth0-variables.ts","webpack:///./src/app/callback/callback.component.css","webpack:///./src/app/callback/callback.component.html","webpack:///./src/app/callback/callback.component.ts","webpack:///./src/app/contact.service.ts","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./contact-create/contact-create.module\": [\n\t\t\"./src/app/contact-create/contact-create.module.ts\",\n\t\t\"contact-create-contact-create-module\"\n\t],\n\t\"./contact-detail/contact-detail.module\": [\n\t\t\"./src/app/contact-detail/contact-detail.module.ts\",\n\t\t\"contact-detail-contact-detail-module\"\n\t],\n\t\"./contact-edit/contact-edit.module\": [\n\t\t\"./src/app/contact-edit/contact-edit.module.ts\",\n\t\t\"contact-edit-contact-edit-module\"\n\t],\n\t\"./contact/contact.module\": [\n\t\t\"./src/app/contact/contact.module.ts\",\n\t\t\"contact-contact-module\"\n\t],\n\t\"./search/search.module\": [\n\t\t\"./src/app/search/search.module.ts\",\n\t\t\"search-search-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from \"./login/login.component\";\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'search',\n    loadChildren: './search/search.module#SearchModule'\n  },\n  {\n    path: 'contacts',\n    loadChildren: './contact/contact.module#ContactModule'\n  },\n  {\n    path: 'contact-details/:id',\n    loadChildren: './contact-detail/contact-detail.module#ContactDetailModule'\n  },\n  {\n    path: 'contact-create',\n    loadChildren: './contact-create/contact-create.module#ContactCreateModule'\n  },\n  {\n    path: 'contact-edit/:id',\n    loadChildren: './contact-edit/contact-edit.module#ContactEditModule'\n  },\n  {\n    path: '',\n    redirectTo: '',\n    pathMatch: 'full'\n  },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"\\n\\n<section class=\\\"section\\\">\\n  <div class=\\\"container\\\">\\n    <app-navbar></app-navbar>\\n    <router-outlet></router-outlet>\\n  </div>\\n</section>\\n\"","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Lazy Load Crud App';\n\n  constructor (\n    private router: Router,\n    private route: ActivatedRoute\n    ) {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule, Http, RequestOptions } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CallbackComponent } from './callback/callback.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { NavbarComponent } from './navbar/navbar.component';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ContactService } from './contact.service';\nimport { MessageService }  from './message.service';\nimport { AuthGuard } from './guard/auth.guard';\nimport { AuthService } from './auth/auth.service';\n\nimport {NgxPaginationModule} from 'ngx-pagination';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CallbackComponent,\n    HomeComponent,\n    LoginComponent,\n    NotFoundComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    NgxPaginationModule,\n    NgbModule.forRoot()\n  ],\n  providers: [AuthService, ContactService, AuthGuard, MessageService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AUTH_CONFIG } from './auth0-variables';//note: this file is hidden via .gitignore, cd into directory to view\nimport { Router } from '@angular/router';\nimport * as auth0 from 'auth0-js';\n//import { JwtHelperService } from '@auth0/angular-jwt';\n\n(window as any).global = window;//need this to avoid this error in Angular 6:\n// Uncaught ReferenceError: global is not defined\n\n@Injectable()\nexport class AuthService {\n\n  auth0 = new auth0.WebAuth({\n    clientID: AUTH_CONFIG.clientID,\n    domain: AUTH_CONFIG.domain,\n    responseType: 'token id_token',\n    audience: `https://${AUTH_CONFIG.domain}/userinfo`,\n    redirectUri: AUTH_CONFIG.callbackURL,\n    scope: 'openid'\n  });\n\n  //constructor(public router: Router, public jwtHelper: JwtHelperService) {}\n  constructor(public router: Router) {}\n  public login(): void {\n    this.auth0.authorize();\n  }\n\n  public handleAuthentication(): void {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        window.location.hash = '';\n        this.setSession(authResult);\n        this.router.navigate(['/home']);\n      } else if (err) {\n        this.router.navigate(['/home']);\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  private setSession(authResult): void {\n    // Set the time that the access token will expire at\n    const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n  }\n\n  public logout(): void {\n    // Remove tokens and expiry time from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // Go back to the home route\n    this.router.navigate(['/']);\n  }\n\n  public isAuthenticated(): boolean {\n    // Check whether the current time is past the\n    // access token's expiry time\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    return new Date().getTime() < expiresAt;\n\n    // const token = localStorage.getItem('token');\n    // // Check whether the token is expired and return\n    // // true or false\n    // return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}\n","\n//import { environment } from '../../environments/environment';\n\ninterface AuthConfig {\n  clientID: string;\n  domain: string;\n  callbackURL: string;\n}\n\nexport const AUTH_CONFIG: AuthConfig = {\n  clientID: 'QHWVXznSaFNIB47Zbrn2A4DC5AobbVnQ',\n  domain: 'juliettet.auth0.com',\n  //callbackURL: 'http://localhost:7777'\n  callbackURL:'https://ang6-crud.herokuapp.com/'\n  //callbackURL: 'http://aci-demo-juliettet.eastus.azurecontainer.io/'\n  //callbackURL: 'http://138.68.230.240:32780/' //DigitalOcean Test\n};\n","module.exports = \".loading {\\n  position: absolute;\\n  display: flex;\\n  justify-content: center;\\n  height: 100vh;\\n  width: 100vw;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  background-color: #fff;\\n}\\n\"","module.exports = \"<div class=\\\"loading\\\">\\n  <img src=\\\"../assets/loading.svg\\\" alt=\\\"loading\\\">\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.css']\n})\nexport class CallbackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n//import { Observable } from 'rxjs/Observable';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Contact } from './models/Contact';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { MessageService } from './message.service';\n\n\n\n@Injectable()\nexport class ContactService {\n\n  private contactUrl = 'api/contact';\n  private contactsUrl = 'api/contacts';  // URL to web api\n\n  constructor(private http: HttpClient, private messageService: MessageService ) { }\n\n\n\n\n  // GET ALL ContactS\n  // getAllContacts(): Observable<Contact[]> {\n  //   return this.http.get<Contact[]>('api/contact');\n  // }\n\n  getPaginatedContacts(): Observable<Contact[]> {\n    return this.http.get<Contact[]>('api/contact');\n  }\n\n  // GET A Contact\n  getContact(id: string): Observable<Contact> {\n    return this.http.get<Contact>(`api/contact/${id}`);\n  }\n\n\n\n  // SAVE A Contact\n  insertContact(contact: Contact): Observable<Contact> {\n    return this.http.post<Contact>('api/contact', contact);\n  }\n\n  // UPDATE A Contact\n  updateContact(id: string, contact: Contact): Observable<void> {\n    return this.http.put<void>(`api/contact/${id}`, contact);\n  }\n\n  // DELETE A Contact\n  deleteContact(id: string): Observable<void> {\n    return this.http.delete<void>(`api/Contact/${id}`);\n  }\n\n\n\n\n //\n//   searchContacts(term: string): Observable<Contact[]> {\n//\n//\n//     if (!term.trim()) {\n//           // if not search id, return empty hero array.\n//           return of([]);\n//         }\n//       //  return this.http.get<Contact[]>(`api/search/?name=${term}`).pipe(\n//        //return this.http.get<Contact[]>(`${this.contactUrl}/${id}/name=${id}`).pipe(\n//       //return this.http.get<Contact[]>(`api/contacts/${id}/name=${id}`).pipe(\n// let data = {limit: \"2\"};\n//       return this.http.get<Contact[]>(`api/search/`,  {params: data}).pipe(\n//         tap(_ => this.log(`found contacts matching \"${term}\"`)),\n//         catchError(this.handleError<Contact[]>('searchContacts'))\n//       );\n//  }\n\nsearchContacts(term: string): Observable<Contact[]> {\n  term = term.trim();\n\n  // Add safe, URL encoded search parameter if there is a search term\n  const options = term ?\n   { params: new HttpParams().set('name', term) } : {};\n\n  return this.http.get<Contact[]>(`api/search/`, options)\n    .pipe(\n      catchError(this.handleError<Contact[]>('searchContactes', []))\n    );\n}\n\n\n\n\n\n private handleError<T> (operation = 'operation', result?: T) {\n  return (error: any): Observable<T> => {\n\n    // TODO: send the error to remote logging infrastructure\n    console.error(error); // log to console instead\n\n    // TODO: better job of transforming error for user consumption\n    this.log(`${operation} failed: ${error.message}`);\n\n    // Let the app keep running by returning an empty result.\n    return of(result as T);\n  };\n}\n\n    /** Log a ContactService message with the MessageService */\n    private log(message: string) {\n      this.messageService.add('ContactService: ' + message);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from \"../auth/auth.service\";\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, public _authService:AuthService)\n{\n\n}\ncanActivate(): boolean {\nconst isAuth = this._authService.isAuthenticated();\n   if(isAuth)\n   return true;\n   else {\n   this.router.navigate(['/login']);\n   return false;\n  }\n   }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"starter-template\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column1\\\">\\n      <img  src=\\\"../../assets/images/mean-logo2.png\\\">\\n    </div>\\n    <div class=\\\"home-column\\\">\\n      <h1 class=\\\"title\\\">MEAN Stack Contact List</h1>\\n      <h2 class=\\\"subtitle\\\">W/ A Node.js RESTful API</h2>\\n      <h6 class=\\\"subtitle\\\">Background photo by Will Stewart via Unsplash</h6>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h4 *ngIf=\\\"_authService.isAuthenticated() ; else nologin\\\">\\n  You are logged in! <a (click)=\\\"_authService.logout()\\\" class=\\\"btn btn-warning\\\">Log Out</a>, Go to <a href=\\\"/user\\\" class=\\\"btn btn-info\\\">User Management</a>\\n</h4>\\n<ng-template #nologin>\\n<h4>\\n  You are not logged in! Please <a (click)=\\\"_authService.login()\\\" class=\\\"btn btn-success\\\">Log In</a> to continue.\\n</h4>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"../auth/auth.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public _authService:AuthService) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","module.exports = \"\\n\\n<div>\\n<nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">MEAN</a>\\n  <button class=\\\"navbar-toggler d-lg-none\\\" type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item \\\">\\n        <a class=\\\"btn btn-warning\\\" routerLink=\\\"/\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn btn-danger\\\" routerLink=\\\"/contacts\\\" routerLinkActive=\\\"active\\\">Contacts</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"btn btn-danger\\\" routerLink=\\\"/search\\\" routerLinkActive=\\\"active\\\">Search</a>\\n      </li>\\n\\n      <li class=\\\"nav-item\\\"><h4 *ngIf=\\\"auth.isAuthenticated() ; else nologin\\\">\\n            <a (click)=\\\"auth.logout()\\\"  class=\\\"btn btn-warning\\\">Log Out</a>\\n           </h4>\\n           <ng-template #nologin>\\n            <h4>\\n               <a (click)=\\\"auth.login()\\\" class=\\\"btn btn-success\\\" >Log In</a>\\n            </h4>\\n            </ng-template>\\n      </li>\\n\\n    </ul>\\n    <!-- <form class=\\\"form-inline mt-2 mt-md-0\\\">\\n      <input #searchBox type=\\\"text\\\" name=\\\"search\\\" placeholder=\\\"Search Contacts...\\\" id=\\\"search-box\\\" (keyup)=\\\"search(searchBox.value)\\\" />\\n\\n          <ul class=\\\"search-result\\\">\\n            <li *ngFor=\\\"let contact of contacts | async\\\" >\\n              <a [routerLink]=\\\"['/contact-details', contact._id]\\\">\\n                {{contact.name}}\\n              </a>\\n            </li>\\n          </ul>\\n    </form> -->\\n  </div>\\n</nav>\\n<div class='container'>\\n    <router-outlet></router-outlet>\\n</div>\\n</div>\\n\"","import { Component, OnInit, isDevMode } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\n import { Contact } from '../models/Contact';\n import { ContactService } from '../contact.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styles: [`\n    .active {\n      background: lightgray;\n    }\n  `]\n})\nexport class NavbarComponent implements OnInit{\n\n    //contact: any;\n    contacts: Observable<Contact[]>;\n\n    private searchTerms = new Subject<string>();\n\n    public isCollapsed = true;\n\n  constructor( public auth: AuthService,\n               public http: HttpClient,\n               private contactService: ContactService,\n               private router: Router,\n               private route: ActivatedRoute) {\n\n     auth.handleAuthentication();\n   }\n\n  // Push a search term into the observable stream.\n  search(term: string) {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit() {\n\n    this.contacts = this.searchTerms.pipe(\n   // wait 300ms after each keystroke before constermering the term\n   debounceTime(300),\n\n   // ignore new term if same as previous term\n   distinctUntilChanged(),\n\n   // switch to new search observable each time the term changes\n   switchMap((term: string) => this.contactService.searchContacts(term)),\n\n  //  .subscribe((data: Observable<Contact[]>) => this.contacts = data),\n );\n\n\n   if (isDevMode()) {\n     console.log('👋 Development!');\n   } else {\n     console.log('💪 Production!');\n   }\n\n   //this.getContactDetails(this.route.snapshot.params['id']);\n\n\n }\n\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}