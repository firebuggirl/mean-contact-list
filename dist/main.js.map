{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact-create/contact-create.component.html","webpack:///./src/app/contact-create/contact-create.component.ts","webpack:///./src/app/contact-detail/contact-detail.component.html","webpack:///./src/app/contact-detail/contact-detail.component.ts","webpack:///./src/app/contact-edit/Contact-edit.component.html","webpack:///./src/app/contact-edit/contact-edit.component.ts","webpack:///./src/app/contact.service.ts","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/routing/routing.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n\\n<section class=\\\"section\\\">\\n  <div class=\\\"container\\\">\\n    <app-navbar></app-navbar>\\n    <router-outlet></router-outlet>\\n  </div>\\n</section>\\n\"","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  constructor (  private router: Router,\n                  private route: ActivatedRoute\n                   ) {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './routing/routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { ContactCreateComponent } from './contact-create/contact-create.component';\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\nimport { ContactEditComponent } from './contact-edit/contact-edit.component';\nimport { FormsModule } from '@angular/forms';\nimport { ContactService } from './contact.service';\nimport { HttpModule, Http, RequestOptions } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\n//import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    HomeComponent,\n    NotFoundComponent,\n    NavbarComponent,\n    ContactComponent,\n    ContactCreateComponent,\n    ContactDetailComponent,\n    ContactEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    NgbModule.forRoot()\n  ],\n  providers: [ContactService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n      <form #contactForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveContact()\\\">\\n          <h1 class=\\\"title\\\">Add New Contact</h1>\\n        <div class=\\\"form-group \\\">\\n          <label for=\\\"name\\\" class=\\\"col-2 col-form-label\\\">Name</label>\\n          <div>\\n            <input required name=\\\"name\\\" id=\\\"title\\\" [(ngModel)]=\\\"contact.name\\\" type=\\\"text\\\" class=\\\"input\\\" placeholder=\\\"Name\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group \\\">\\n          <label for=\\\"email\\\" class=\\\"col-2 col-form-label\\\">Email</label>\\n          <div>\\n            <input  required name=\\\"email\\\" id=\\\"email\\\" [(ngModel)]=\\\"contact.email\\\" type=\\\"text\\\" class=\\\"input\\\" placeholder=\\\"support@mlab.com\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group \\\">\\n          <label for=\\\"phone\\\" class=\\\"col-2 col-form-label\\\">Phone</label>\\n          <div>\\n            <input  required name=\\\"phone\\\" id=\\\"phone\\\" [(ngModel)]=\\\"contact.phone\\\" type=\\\"text\\\" class=\\\"input\\\" placeholder=\\\"1234567890\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group \\\">\\n          <label for=\\\"address\\\" class=\\\"col-2 col-form-label\\\">Address</label>\\n          <div>\\n            <input  required name=\\\"address\\\" id=\\\"address\\\" [(ngModel)]=\\\"contact.address\\\" type=\\\"text\\\" class=\\\"input\\\" placeholder=\\\"123 Tumbleweed Dr.\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group \\\">\\n          <label for=\\\"city\\\" class=\\\"col-2 col-form-label\\\">City</label>\\n          <div>\\n            <input  required name=\\\"city\\\" id=\\\"city\\\" [(ngModel)]=\\\"contact.city\\\" type=\\\"text\\\" class=\\\"input\\\" placeholder=\\\"Desert Springs\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group \\\">\\n          <label for=\\\"state\\\" class=\\\"col-2 col-form-label\\\">State</label>\\n          <div>\\n            <input  required name=\\\"state\\\" id=\\\"state\\\" [(ngModel)]=\\\"contact.state\\\" type=\\\"text\\\" class=\\\"input\\\" placeholder=\\\"CA\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group \\\">\\n          <label for=\\\"zipcode\\\" class=\\\"col-2 col-form-label\\\">Zipcode</label>\\n          <div>\\n            <input  required name=\\\"zipcode\\\" id=\\\"zipcode\\\" [(ngModel)]=\\\"contact.zipcode\\\" type=\\\"text\\\" class=\\\"input\\\" placeholder=\\\"90011\\\">\\n          </div>\\n        </div>\\n      \\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <button class=\\\"button back\\\" routerLink=\\\"/contacts\\\"><i class=\\\"fas fa-arrow-left\\\"></i>Back</button>\\n            <button class=\\\"button create\\\" type=\\\"submit\\\" [disabled]=\\\"!contactForm.valid\\\">Create</button>\\n          </div>\\n        </div>\\n\\n      </form>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ContactService } from '../contact.service';\nimport { Contact } from '../models/Contact';\n\n@Component({\n  selector: 'app-contact-create',\n  templateUrl: './contact-create.component.html',\n  styles: []\n})\nexport class ContactCreateComponent {\n\n  contact: any = {};\n\n  constructor(private router: Router, private contactService: ContactService) { }\n\n  saveContact() {\n    this.contactService.insertContact(this.contact)\n      .subscribe((res: Contact) => { this.router.navigate(['/contacts']); }, (err) => console.log(err));\n  }\n}\n","module.exports = \"<div class=\\\"contactDetail\\\">\\n  <section >\\n    <div >\\n      <div class=\\\"detail-container\\\">\\n        <h1 class=\\\"title\\\">{{ contact?.name }}</h1>\\n        <h2 class=\\\"subtitle\\\">Email {{ contact?.email }}</h2>\\n        <h2 class=\\\"subtitle\\\">Phone {{ contact?.phone }}</h2>\\n        <h2 class=\\\"subtitle\\\">Address {{ contact?.address }}</h2>\\n        <h2 class=\\\"subtitle\\\">City {{ contact?.city }}</h2>\\n        <h2 class=\\\"subtitle\\\">State {{ contact?.state }}</h2>\\n        <h2 class=\\\"subtitle\\\">Zipcode {{ contact?.zipcode }}</h2>\\n        <!-- <h2 class=\\\"subtitle\\\">work phone {{ contact?.phone.work }}</h2>\\n        <h2 class=\\\"subtitle\\\">mobile phone {{ contact?.phone.mobile }}</h2> -->\\n      </div>\\n    </div>\\n    <div class=\\\"btn-column\\\">\\n      <div class=\\\"column\\\">\\n        <button class=\\\"btn btn-danger btn-lg btn-detail\\\" routerLink=\\\"/contacts\\\">Back</button>\\n        <button *ngIf=\\\"contact\\\" class=\\\"btn btn-warning btn-lg btn-detail\\\" [routerLink]=\\\"['/contact-edit', contact?._id]\\\">Edit</button>\\n        <button *ngIf=\\\"!contact\\\"  class=\\\"btn btn-warning btn-lg btn-detail\\\">Edit</button>\\n        <button class=\\\"btn btn-danger btn-lg btn-detail\\\" (click)=\\\"deleteContact(contact?._id)\\\">Delete</button>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ContactService } from '../contact.service';\nimport { Contact } from '../models/Contact';\n\n@Component({\n  selector: 'app-contact-detail',\n  templateUrl: './contact-detail.component.html',\n  styles: []\n})\nexport class ContactDetailComponent implements OnInit {\n\n  contact: any;\n\n  constructor(private router: Router, private route: ActivatedRoute, private contactService: ContactService) { }\n\n  ngOnInit() {\n    this.getContactDetails(this.route.snapshot.params['id']);\n  }\n\n  getContactDetails(id: string) {\n    this.contactService.getContact(id)\n      .subscribe((data: Contact) => this.contact = data);\n  }\n\n  deleteContact(id: string) {\n    this.contactService.deleteContact(id)\n      .subscribe((res: void) => { this.router.navigate(['/contacts']); }, (err) => console.log(err));\n  }\n\n}\n","module.exports = \"<div class=\\\"contactEdit\\\">\\n  <h1 class=\\\"title\\\">Update Contact</h1>\\n  <div >\\n    <div>\\n      <form #contactForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateContact(contact._id)\\\">\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input *ngIf=\\\"contact\\\" required name=\\\"name\\\" id=\\\"name\\\" [(ngModel)]=\\\"contact.name\\\" type=\\\"text\\\" class=\\\"input\\\">\\n            <input *ngIf=\\\"!contact\\\" required name=\\\"name\\\" id=\\\"name\\\" type=\\\"text\\\" class=\\\"input\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input *ngIf=\\\"contact\\\" required name=\\\"email\\\" id=\\\"email\\\" [(ngModel)]=\\\"contact.email\\\" type=\\\"text\\\" class=\\\"input\\\">\\n            <input *ngIf=\\\"!contact\\\" required name=\\\"email\\\" id=\\\"email\\\" type=\\\"text\\\" class=\\\"input\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"field\\\">\\n          <div class=\\\"control\\\">\\n            <label for=\\\"phone\\\">Phone</label>\\n            <input *ngIf=\\\"contact\\\" required name=\\\"phone\\\" id=\\\"phone\\\" [(ngModel)]=\\\"contact.phone\\\" type=\\\"text\\\" class=\\\"input\\\">\\n            <input *ngIf=\\\"!contact\\\" required name=\\\"phone\\\" id=\\\"phone\\\" type=\\\"text\\\" class=\\\"input\\\">\\n          </div>\\n        </div>\\n       <div class=\\\"control\\\">\\n          <div class=\\\"field\\\">\\n            <label for=\\\"address\\\">Address</label>\\n            <input *ngIf=\\\"contact\\\" required name=\\\"address\\\" id=\\\"address\\\" [(ngModel)]=\\\"contact.address\\\" type=\\\"text\\\" class=\\\"input\\\">\\n            <input *ngIf=\\\"!contact\\\" required name=\\\"address\\\" id=\\\"address\\\" type=\\\"text\\\" class=\\\"input\\\">\\n          </div>\\n       </div>\\n      <div class=\\\"control\\\">\\n          <div class=\\\"field\\\">\\n            <label for=\\\"city\\\">City</label>\\n            <input *ngIf=\\\"contact\\\" required name=\\\"city\\\" id=\\\"city\\\" [(ngModel)]=\\\"contact.city\\\" type=\\\"text\\\" class=\\\"input\\\">\\n            <input *ngIf=\\\"!contact\\\" required name=\\\"city\\\" id=\\\"city\\\" type=\\\"text\\\" class=\\\"input\\\">\\n          </div>\\n      </div>\\n      <div class=\\\"control\\\">\\n          <div class=\\\"field\\\">\\n            <label for=\\\"state\\\">State</label>\\n            <input *ngIf=\\\"contact\\\" required name=\\\"state\\\" id=\\\"state\\\" [(ngModel)]=\\\"contact.state\\\" type=\\\"text\\\" class=\\\"input\\\">\\n            <input *ngIf=\\\"!contact\\\" required name=\\\"state\\\" id=\\\"state\\\" type=\\\"text\\\" class=\\\"input\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"control\\\">\\n            <div class=\\\"field\\\">\\n              <label for=\\\"zipcode\\\">Zipcode</label>\\n              <input *ngIf=\\\"contact\\\" required name=\\\"zipcode\\\" id=\\\"zipcode\\\" [(ngModel)]=\\\"contact.zipcode\\\" type=\\\"text\\\" class=\\\"input\\\">\\n              <input *ngIf=\\\"!contact\\\" required name=\\\"zipcode\\\" id=\\\"zipcode\\\" type=\\\"text\\\" class=\\\"input\\\">\\n           </div>\\n      </div>\\n      <div class=\\\"btn-column\\\">\\n          <div class=\\\"control\\\">\\n            <button class=\\\"btn btn-danger btn-edit\\\" routerLink=\\\"/contacts\\\"><i class=\\\"fas fa-arrow-left\\\"></i>Back</button>\\n            <button class=\\\"btn btn-warning\\\" type=\\\"submit\\\" [disabled]=\\\"!contactForm.valid\\\">Update</button>\\n          </div>\\n      </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ContactService } from '../contact.service';\nimport { Contact } from '../models/Contact';\n\n@Component({\n  selector: 'app-Contact-edit',\n  templateUrl: './Contact-edit.component.html',\n  styles: []\n})\nexport class ContactEditComponent implements OnInit {\n\n  contact: any;\n\n  constructor(private router: Router, private route: ActivatedRoute, private contactService: ContactService) { }\n\n  ngOnInit() {\n    this.getContactDetails(this.route.snapshot.params['id']);\n  }\n\n  getContactDetails(id: string) {\n    this.contactService.getContact(id)\n      .subscribe((data: Contact) => this.contact = data);\n  }\n\n  updateContact(id: string) {\n    this.contactService.updateContact(id, this.contact)\n      .subscribe((res: void) => this.router.navigate(['/contacts']), (err) => console.log(err));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient } from '@angular/common/http';\nimport { Contact } from './models/Contact';\n\n@Injectable()\nexport class ContactService {\n\n  constructor(private http: HttpClient) { }\n\n  // GET ALL ContactS\n  getAllContacts(): Observable<Contact[]> {\n    return this.http.get<Contact[]>('api/contact');\n  }\n\n  // GET A Contact\n  getContact(id: string): Observable<Contact> {\n    return this.http.get<Contact>(`api/contact/${id}`);\n  }\n\n  // SAVE A Contact\n  insertContact(contact: Contact): Observable<Contact> {\n    return this.http.post<Contact>('api/contact', contact);\n  }\n\n  // UPDATE A Contact\n  updateContact(id: string, contact: Contact): Observable<void> {\n    return this.http.put<void>(`api/contact/${id}`, contact);\n  }\n\n  // DELETE A Contact\n  deleteContact(id: string): Observable<void> {\n    return this.http.delete<void>(`api/Contact/${id}`);\n  }\n\n}\n","module.exports = \"<div class=\\\"contactlist\\\" >\\n  <h1 class=\\\"title\\\">Contact List\\n    <a [routerLink]=\\\"['/contact-create']\\\" class=\\\"button is-link is-outlined\\\"><i class=\\\"fas fa-plus\\\"></i>Add</a>\\n  </h1>\\n  <table class=\\\"table is-striped is-hoverable is-fullwidth\\\" >\\n    <thead>\\n      <tr>\\n        <th>Name</th>\\n        <th>Email</th>\\n        <th>Phone</th>\\n        <th>Address</th>\\n        <th>City</th>\\n        <th>State</th>\\n        <th>Zipcode</th>\\n        <!-- <th>Work</th>\\n        <th>Mobile</th> -->\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let contact of contacts\\\">\\n        <td><a class=\\\"button is-text\\\" [routerLink]=\\\"['/contact-details', contact._id]\\\">{{ contact.name }}</a></td>\\n        <td>{{ contact.email }}</td>\\n        <td>{{ contact.phone }}</td>\\n        <td>{{ contact.address }}</td>\\n        <td>{{ contact.city }}</td>\\n        <td>{{ contact.state }}</td>\\n        <td>{{ contact.zipcode }}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ContactService } from '../contact.service';\nimport { Contact } from '../models/Contact';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styles: []\n})\nexport class ContactComponent implements OnInit {\n\n  contacts: any;\n\n  constructor(private contactService: ContactService) { }\n\n  ngOnInit() {\n    this.contactService.getAllContacts()\n      .subscribe((data: Contact[]) => this.contacts = data);\n  }\n\n}\n","module.exports = \"<div class=\\\"starter-template\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column1\\\">\\n      <img width=\\\"400\\\" height=\\\"185\\\" src=\\\"../../assets/images/mean-logo2.png\\\">\\n    </div>\\n    <div class=\\\"column\\\">\\n      <h1 class=\\\"title\\\">MEAN Stack Contact List</h1>\\n      <h2 class=\\\"subtitle\\\">W/ A Node.js RESTful API</h2>\\n      <h6 class=\\\"subtitle\\\">Background photo by Will Stewart via Unsplash</h6>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent {\n\n  constructor() { }\n\n}\n","module.exports = \"\\n\\n<div>\\n<nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Dashboard</a>\\n  <button class=\\\"navbar-toggler d-lg-none\\\" type=\\\"button\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact : true }\\\">Home</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/contacts\\\" routerLinkActive=\\\"active\\\">Contacts</a>\\n      </li>\\n\\n    </ul>\\n    <form class=\\\"form-inline mt-2 mt-md-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-outline-danger my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n<div class='container'>\\n    <router-outlet></router-outlet>\\n</div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styles: [`\n    .active {\n      background: lightgray;\n    }\n  `]\n})\nexport class NavbarComponent {\n\n  \n  public isCollapsed = true;\n\n  constructor() { }\n\n\n\n}\n","module.exports = \"<div class=\\\"contactlist\\\">\\n  <h1 class=\\\"title\\\">Error 404</h1>\\n  <h2 class=\\\"subtitle\\\">Page Not Found</h2>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styles: []\n})\nexport class NotFoundComponent {\n\n  constructor() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from '../home/home.component';\nimport { ContactComponent } from '../contact/contact.component';\nimport { ContactDetailComponent } from '../contact-detail/contact-detail.component';\nimport { ContactCreateComponent } from '../contact-create/contact-create.component';\nimport { ContactEditComponent } from '../contact-edit/contact-edit.component';\nimport { NotFoundComponent } from '../not-found/not-found.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'contacts', component: ContactComponent },\n  { path: 'contact-details/:id', component: ContactDetailComponent },\n  { path: 'contact-create', component: ContactCreateComponent },\n  { path: 'contact-edit/:id', component: ContactEditComponent },\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}